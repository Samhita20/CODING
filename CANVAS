Formally, you're given the maximum speed of N cars in the order they entered the long straight segment of the circuit. Each car prefers to move at its maximum speed. If that's not possible because of the front car being slow, it might have to lower its speed. It still moves at the fastest possible speed while avoiding any collisions. For the purpose of this problem, you can assume that the straight segment is infinitely long.

Count the number of cars which were moving at their maximum speed on the straight segment.

public static int countOfMaxSpeed(int[] maxSpeed, int n)
    {
        int count = 0;
        int[] speed = new int[n];
        speed[0] = maxSpeed[0];
        for(int i=1;i<n;i++)
        {
            speed[i] = Math.min(maxSpeed[i],speed[i-1]); //min of car speed in front of it and it's max speed
        }
        for(int i=0;i<n;i++)
        {
            if(speed[i]==maxSpeed[i])
                count ++;
        }
        return count;
    }
