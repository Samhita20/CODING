Given a string S consisting of only 1s and 0s, find the number of substrings which start and end both in 1.
In this problem, a substring is defined as a sequence of continuous characters Si, Si+1, ..., Sj where 1 ≤ i ≤ j ≤ N.

 int n = sc.nextInt();
		    sc.nextLine();
		    String s = sc.nextLine();
		    long oneCount = 0;
		    for(int i = 0; i < s.length(); i++)
		    {
		        if(s.charAt(i) == '1')
		            oneCount++;
		    }
		    System.out.println(oneCount*(oneCount+1)/2);
        
//we need two 1's - start and end, so we need to select two 1's from the oneCount - oneCountC2
//each 1 on it's own also follows the given property of starting and ending with 1 as a substring - oneCountC2 + oneCount
//let oneCont = k; ans = k*(k-1)/2 + k = k*(k+1)/2
